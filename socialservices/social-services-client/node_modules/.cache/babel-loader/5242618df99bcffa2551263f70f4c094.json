{"ast":null,"code":"import axios from \"axios\";\nimport { GET_STUDENT, GET_STUDENTS, TOGGLE_STUDENT_SECTION } from \"./action-types\";\nimport { UPDATE_STUDENT_UI, EXISTING_STUDENT, NEW_STUDENT, REINITIALIZE_STUDENT } from \"./action-types\";\nimport { STUDENT } from \"../constants/student\";\nexport const reinitializeStudent = () => async dispatch => {\n  dispatch({\n    type: REINITIALIZE_STUDENT\n  });\n};\nexport const existingStudent = (id, history) => async dispatch => {\n  dispatch({\n    type: EXISTING_STUDENT,\n    payload: id\n  });\n  history.push(`/student/${id}`);\n};\nexport const getStudent = id => async dispatch => {\n  const data = STUDENT;\n\n  if (id) {\n    const res = await axios.get(`/student/${id}`);\n    data = res.data;\n  }\n\n  dispatch({\n    type: GET_STUDENT,\n    payload: data\n  });\n};\nexport const getStudents = () => async dispatch => {\n  const res = await axios.get(\"/student/all\");\n  dispatch({\n    type: GET_STUDENTS,\n    payload: res.data\n  });\n};\nexport const toggleStudentSection = activeKey => async dispatch => {\n  dispatch({\n    type: TOGGLE_STUDENT_SECTION,\n    payload: activeKey\n  });\n};\nexport const updateStudentUI = (domain, field, value) => async dispatch => {\n  dispatch({\n    type: UPDATE_STUDENT_UI,\n    payload: {\n      domain: domain,\n      field: field,\n      value: value\n    }\n  });\n};\nexport const addStudent = (student, history) => async dispatch => {\n  let studentWrapper = {};\n  studentWrapper.personalInformation = student.personalInformation;\n  studentWrapper.immediateNeeds = student.immediateNeeds;\n  await axios.post(\"/student\", studentWrapper);\n  history.push(\"/dashboard\");\n};","map":{"version":3,"sources":["/Users/anirudhnigania/Documents/UIC/workspace/CFL/socialservices/social-services-client/src/actions/studentActions.js"],"names":["axios","GET_STUDENT","GET_STUDENTS","TOGGLE_STUDENT_SECTION","UPDATE_STUDENT_UI","EXISTING_STUDENT","NEW_STUDENT","REINITIALIZE_STUDENT","STUDENT","reinitializeStudent","dispatch","type","existingStudent","id","history","payload","push","getStudent","data","res","get","getStudents","toggleStudentSection","activeKey","updateStudentUI","domain","field","value","addStudent","student","studentWrapper","personalInformation","immediateNeeds","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,WADF,EAEEC,YAFF,EAGEC,sBAHF,QAIO,gBAJP;AAKA,SACEC,iBADF,EAEEC,gBAFF,EAGEC,WAHF,EAIEC,oBAJF,QAKO,gBALP;AAMA,SAASC,OAAT,QAAwB,sBAAxB;AAEA,OAAO,MAAMC,mBAAmB,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC3DA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEJ;AADC,GAAD,CAAR;AAGD,CAJM;AAMP,OAAO,MAAMK,eAAe,GAAG,CAACC,EAAD,EAAKC,OAAL,KAAiB,MAAOJ,QAAP,IAAoB;AAClEA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEN,gBADC;AAEPU,IAAAA,OAAO,EAAEF;AAFF,GAAD,CAAR;AAKAC,EAAAA,OAAO,CAACE,IAAR,CAAc,YAAWH,EAAG,EAA5B;AACD,CAPM;AASP,OAAO,MAAMI,UAAU,GAAIJ,EAAD,IAAQ,MAAOH,QAAP,IAAoB;AACpD,QAAMQ,IAAI,GAAGV,OAAb;;AACA,MAAIK,EAAJ,EAAQ;AACN,UAAMM,GAAG,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAW,YAAWP,EAAG,EAAzB,CAAlB;AACAK,IAAAA,IAAI,GAAGC,GAAG,CAACD,IAAX;AACD;;AAEDR,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEV,WADC;AAEPc,IAAAA,OAAO,EAAEG;AAFF,GAAD,CAAR;AAID,CAXM;AAaP,OAAO,MAAMG,WAAW,GAAG,MAAM,MAAOX,QAAP,IAAoB;AACnD,QAAMS,GAAG,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAU,cAAV,CAAlB;AAEAV,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAET,YADC;AAEPa,IAAAA,OAAO,EAAEI,GAAG,CAACD;AAFN,GAAD,CAAR;AAID,CAPM;AASP,OAAO,MAAMI,oBAAoB,GAAIC,SAAD,IAAe,MAAOb,QAAP,IAAoB;AACrEA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAER,sBADC;AAEPY,IAAAA,OAAO,EAAEQ;AAFF,GAAD,CAAR;AAID,CALM;AAOP,OAAO,MAAMC,eAAe,GAAG,CAACC,MAAD,EAASC,KAAT,EAAgBC,KAAhB,KAA0B,MAAOjB,QAAP,IAAoB;AAC3EA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEP,iBADC;AAEPW,IAAAA,OAAO,EAAE;AAAEU,MAAAA,MAAM,EAAEA,MAAV;AAAkBC,MAAAA,KAAK,EAAEA,KAAzB;AAAgCC,MAAAA,KAAK,EAAEA;AAAvC;AAFF,GAAD,CAAR;AAID,CALM;AAOP,OAAO,MAAMC,UAAU,GAAG,CAACC,OAAD,EAAUf,OAAV,KAAsB,MAAOJ,QAAP,IAAoB;AAClE,MAAIoB,cAAc,GAAG,EAArB;AACAA,EAAAA,cAAc,CAACC,mBAAf,GAAqCF,OAAO,CAACE,mBAA7C;AACAD,EAAAA,cAAc,CAACE,cAAf,GAAgCH,OAAO,CAACG,cAAxC;AACA,QAAMhC,KAAK,CAACiC,IAAN,CAAW,UAAX,EAAuBH,cAAvB,CAAN;AACAhB,EAAAA,OAAO,CAACE,IAAR,CAAa,YAAb;AACD,CANM","sourcesContent":["import axios from \"axios\";\nimport {\n  GET_STUDENT,\n  GET_STUDENTS,\n  TOGGLE_STUDENT_SECTION,\n} from \"./action-types\";\nimport {\n  UPDATE_STUDENT_UI,\n  EXISTING_STUDENT,\n  NEW_STUDENT,\n  REINITIALIZE_STUDENT,\n} from \"./action-types\";\nimport { STUDENT } from \"../constants/student\";\n\nexport const reinitializeStudent = () => async (dispatch) => {\n  dispatch({\n    type: REINITIALIZE_STUDENT,\n  });\n};\n\nexport const existingStudent = (id, history) => async (dispatch) => {\n  dispatch({\n    type: EXISTING_STUDENT,\n    payload: id,\n  });\n\n  history.push(`/student/${id}`);\n};\n\nexport const getStudent = (id) => async (dispatch) => {\n  const data = STUDENT;\n  if (id) {\n    const res = await axios.get(`/student/${id}`);\n    data = res.data;\n  }\n\n  dispatch({\n    type: GET_STUDENT,\n    payload: data,\n  });\n};\n\nexport const getStudents = () => async (dispatch) => {\n  const res = await axios.get(\"/student/all\");\n\n  dispatch({\n    type: GET_STUDENTS,\n    payload: res.data,\n  });\n};\n\nexport const toggleStudentSection = (activeKey) => async (dispatch) => {\n  dispatch({\n    type: TOGGLE_STUDENT_SECTION,\n    payload: activeKey,\n  });\n};\n\nexport const updateStudentUI = (domain, field, value) => async (dispatch) => {\n  dispatch({\n    type: UPDATE_STUDENT_UI,\n    payload: { domain: domain, field: field, value: value },\n  });\n};\n\nexport const addStudent = (student, history) => async (dispatch) => {\n  let studentWrapper = {};\n  studentWrapper.personalInformation = student.personalInformation;\n  studentWrapper.immediateNeeds = student.immediateNeeds;\n  await axios.post(\"/student\", studentWrapper);\n  history.push(\"/dashboard\");\n};\n"]},"metadata":{},"sourceType":"module"}